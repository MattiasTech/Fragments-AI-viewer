import{cm as a,co as e,cD as W,cs as N,cB as pe,cF as Ge,cp as x,cq as f,cG as Ue,cH as qe,cI as Xe,cM as Ye,cN as ge,cr as j,cy as O,dg as Je,cU as Ke,d1 as te,d3 as Ze,d4 as je,d5 as Ie,de as Qe,dh as es,di as v,cE as ss,dj as ye,dk as be,dl as ts,dm as Se,cO as ls,cn as as,dn as ns,dp as Ce,dq as Pe,dr as is,cP as rs,ds as os,dt as cs,du as ve,dv as Le,d6 as $,dw as ds,dx as us}from"./vendor-DcICA_3z.js";import{u as hs,a as I,i as xs}from"./index-LLVaTGtV.js";import"./thatopen-vendor-CcC7XCOM.js";import"./three-vendor-BFJjymLZ.js";const C=r=>{if(r==null)return"";const m=/[",\n]/.test(r),h=r.replace(/"/g,'""');return m?`"${h}"`:h},Re=r=>new Blob([JSON.stringify(r,null,2)],{type:"application/json"}),Ee=(r,m)=>{const{includePassed:h=!0,includeNA:t=!0}=m??{},L=r.filter(o=>o.status==="FAILED"?!0:o.status==="PASSED"?h:o.status==="NA"?t:!0),A="RuleId,RuleTitle,Status,GlobalId,IfcClass,Property,Expected,Actual,Reason",T=L.map(o=>[C(o.ruleId),C(o.ruleTitle),C(o.status),C(o.globalId),C(o.ifcClass),C(o.propertyPath),C(o.expected),C(o.actual),C(o.reason)].join(",")),R=[A,...T].join(`\r
`);return new Blob([R],{type:"text/csv;charset=utf-8;"})},fs=`<ids:ids xmlns:ids="http://standards.buildingsmart.org/IDS">
  <ids:specification ifcVersion="IFC4" name="Walls must have FireRating">
    <ids:applicability minOccurs="0" maxOccurs="unbounded">
      <ids:entity>
        <ids:name>
          <ids:simpleValue>IFCWALL</ids:simpleValue>
        </ids:name>
      </ids:entity>
    </ids:applicability>
    <ids:requirements>
      <ids:property cardinality="required">
        <ids:propertySet>
          <ids:simpleValue>Pset_WallCommon</ids:simpleValue>
        </ids:propertySet>
        <ids:baseName>
          <ids:simpleValue>FireRating</ids:simpleValue>
        </ids:baseName>
      </ids:property>
    </ids:requirements>
  </ids:specification>
  <ids:specification ifcVersion="IFC4" name="Pipes must be insulated">
    <ids:applicability minOccurs="0" maxOccurs="unbounded">
      <ids:entity>
        <ids:name>
          <ids:simpleValue>IFCFLOWSEGMENT</ids:simpleValue>
        </ids:name>
      </ids:entity>
    </ids:applicability>
    <ids:requirements>
      <ids:property cardinality="required">
        <ids:propertySet>
          <ids:simpleValue>Insulation</ids:simpleValue>
        </ids:propertySet>
        <ids:baseName>
          <ids:simpleValue>Insulation Type</ids:simpleValue>
        </ids:baseName>
        <ids:allowedValues>
          <ids:values>
            <ids:value>
              <ids:simpleValue>-V19</ids:simpleValue>
            </ids:value>
            <ids:value>
              <ids:simpleValue>Mineral Wool</ids:simpleValue>
            </ids:value>
          </ids:values>
        </ids:allowedValues>
      </ids:property>
    </ids:requirements>
  </ids:specification>
</ids:ids>`,ms={PASSED:"success.light",FAILED:"error.light",NA:"warning.light"},ps={PASSED:"Passed",FAILED:"Failed",NA:"N/A"},gs={IDLE:"Idle",BUILDING_PROPERTIES:"Building properties",CHECKING_IDS:"Compiling IDS rules",COMPARING_DATA:"Validating elements",FINALIZING:"Finalizing report",DONE:"Done",ERROR:"Error"},js={IDLE:"default",BUILDING_PROPERTIES:"info",CHECKING_IDS:"primary",COMPARING_DATA:"warning",FINALIZING:"secondary",DONE:"success",ERROR:"error"},w=(r,m=2e3)=>{const h=[];for(let t=0;t<r.length;t+=m)h.push(r.slice(t,t+m));return h},Y=(r,m)=>{const h=URL.createObjectURL(r),t=document.createElement("a");t.href=h,t.download=m,document.body.appendChild(t),t.click(),document.body.removeChild(t),URL.revokeObjectURL(h)},Is=({rows:r,height:m=360,rowHeight:h=44,onRowClick:t})=>{const L=a.useRef(null),[A,T]=a.useState(0),R=r.length*h,o=6,V=Math.ceil(m/h)+o,E=Math.max(0,Math.floor(A/h)-o),J=Math.min(r.length,E+V),y=r.slice(E,J),D=a.useCallback(()=>{const l=L.current;l&&T(l.scrollTop)},[]);return a.useEffect(()=>{const l=L.current;if(l)return l.addEventListener("scroll",D,{passive:!0}),()=>l.removeEventListener("scroll",D)},[D]),e.jsx(x,{ref:L,sx:{position:"relative",height:m,overflowY:"auto",border:"1px solid",borderColor:"divider",borderRadius:1,backgroundColor:"background.paper"},children:e.jsx(x,{sx:{height:R,position:"relative"},children:y.map((l,B)=>{const M=(E+B)*h;return e.jsxs(x,{sx:{position:"absolute",top:M,left:0,right:0,height:h,display:"flex",alignItems:"center",gap:1,px:1.5,borderBottom:"1px solid",borderColor:"divider",backgroundColor:ms[l.status]??"background.paper",cursor:typeof t=="function"?"pointer":"default","&:hover":{backgroundColor:"action.hover"}},onClick:()=>t?.(l),children:[e.jsx(v,{label:ps[l.status],size:"small",color:l.status==="FAILED"?"error":l.status==="PASSED"?"success":"warning"}),e.jsx(f,{variant:"body2",sx:{minWidth:120,fontWeight:600},title:l.ruleId,children:l.ruleId}),e.jsx(f,{variant:"body2",sx:{flex:1},noWrap:!0,title:l.ruleTitle,children:l.ruleTitle}),e.jsx(f,{variant:"body2",sx:{minWidth:140},noWrap:!0,title:l.globalId,children:l.globalId}),e.jsx(f,{variant:"body2",sx:{minWidth:110},noWrap:!0,title:l.ifcClass,children:l.ifcClass}),e.jsx(f,{variant:"body2",sx:{minWidth:180},noWrap:!0,title:l.propertyPath,children:l.propertyPath??"—"}),e.jsx(f,{variant:"body2",sx:{minWidth:160},noWrap:!0,title:l.expected,children:l.expected??"—"}),e.jsx(f,{variant:"body2",sx:{minWidth:160},noWrap:!0,title:l.actual,children:l.actual??"—"}),e.jsx(f,{variant:"body2",sx:{minWidth:220},noWrap:!0,title:l.reason,children:l.reason??"—"})]},`${l.ruleId}-${l.globalId}-${B}`)})})})},Ps=({isOpen:r,onOpen:m,onClose:h,viewerApi:t,hasModel:L,expandSignal:A})=>{const T=a.useRef(null),R=a.useRef(null),[o,V]=a.useState(!1),[E,J]=a.useState({width:620,height:560}),y=a.useRef(null),D=a.useRef(!1),{setIdsXmlText:l,appendDocuments:B,clearResults:M,runCheck:le,filterRows:K,setValidateSelectedOnly:ae}=hs(),De=I(s=>s.idsXmlText),ne=I(s=>s.idsFileNames),G=I(s=>s.isChecking),k=I(s=>s.phase),z=I(s=>s.progress),F=I(s=>s.rules),H=I(s=>s.rows),p=I(s=>s.filteredRows),ie=I(s=>s.error),ke=I(s=>s.validateSelectedOnly),[Z,Q]=a.useState("summary"),[ee,re]=a.useState(""),[U,oe]=a.useState("ALL"),[q,ce]=a.useState("ALL");a.useEffect(()=>{xs.clearOldCache().catch(s=>{console.warn("Failed to clean old cache:",s)})},[]);const g=a.useMemo(()=>({popper:{sx:{zIndex:4e3}}}),[]),se=a.useMemo(()=>F.reduce((s,n)=>(s.pass+=n.passed.length,s.fail+=n.failed.length,s.na+=n.na.length,s),{pass:0,fail:0,na:0}),[F]),ze=k!=="IDLE",Fe=gs[k],Ne=js[k];let X="indeterminate",_,P;const de=Math.max(1,(navigator.hardwareConcurrency||4)-1);if(k==="DONE")X="determinate",_=100,P="Complete";else if(k==="ERROR")X="determinate",_=0,P="Failed";else if(z&&z.total>0){const s=Math.min(z.done,z.total);if(X="determinate",_=Math.max(0,Math.min(s/z.total*100,100)),k==="BUILDING_PROPERTIES"){const n=Math.round(_);P=`Processing with ${de} parallel workers: ${n}% (${s.toLocaleString()} / ${z.total.toLocaleString()} elements)`}else P=`${s.toLocaleString()} / ${z.total.toLocaleString()}`}else G&&(k==="BUILDING_PROPERTIES"?P=`Initializing ${de} parallel workers…`:P="Working…");const Te=X==="determinate"?{variant:"determinate",value:_??0}:{variant:"indeterminate"},Ve=!!De.trim().length,Me=a.useCallback(async s=>{const n=Array.from(s.target.files??[]);if(!n.length)return;const u=await Promise.all(n.map(i=>new Promise((c,b)=>{const d=new FileReader;d.onload=()=>c({name:i.name,content:String(d.result??"")}),d.onerror=()=>b(d.error??new Error("Failed to read IDS file.")),d.readAsText(i)})));B(u),s.target.value=""},[B]),We=a.useCallback(()=>{l(fs.trim(),{fileNames:["Sample IDS"]}),M()},[l,M]),Oe=a.useCallback(()=>{l("",{fileNames:[]}),M()},[l,M]),$e=a.useCallback(s=>{ae(s.target.value==="selected")},[ae]),Ae=a.useCallback(async()=>{t&&(await le(t),Q("summary"))},[le,t]),Be=a.useCallback(async()=>{if(t)try{typeof t.clearColors=="function"&&await Promise.resolve(t.clearColors()),typeof t.clearIsolation=="function"&&await Promise.resolve(t.clearIsolation())}catch(s){console.warn("Failed to clear IDS highlights on close",s)}V(!1),h()},[t,h]);a.useEffect(()=>{r||(V(!1),Q("summary"))},[r]),a.useEffect(()=>{r&&V(!1)},[A,r]);const ue=a.useCallback(()=>{if(!H.length){K(null);return}const s=ee.trim().toLowerCase(),n=U==="ALL"?null:U,u=q==="ALL"?null:q;K(i=>n&&i.status!==n||u&&i.ruleId!==u?!1:s?[i.globalId,i.ifcClass,i.propertyPath,i.expected,i.actual,i.reason,i.ruleTitle].filter(Boolean).join(" ").toLowerCase().includes(s):!0)},[H,ee,U,q,K]);a.useEffect(()=>{const s=window.setTimeout(()=>{ue()},120);return()=>window.clearTimeout(s)},[ue]);const He=a.useCallback(async s=>{if(!t)return;const n=Array.from(new Set(s.failed)),u=Array.from(new Set(s.passed)),i=n.length?n:u;console.debug(`[handleRuleHighlight] Highlighting rule: ${s.title} (failed=${n.length}, passed=${u.length})`);try{await Promise.resolve(t.clearColors()),t.clearIsolation&&await Promise.resolve(t.clearIsolation())}catch(c){console.warn("Failed to reset viewer colors before highlighting rule",c)}try{if(typeof t.color=="function"){for(const c of w(n))c.length&&await Promise.resolve(t.color(c,{r:1,g:.2,b:.2,a:1}));for(const c of w(u))c.length&&await Promise.resolve(t.color(c,{r:.2,g:.7,b:.25,a:1}))}i.length&&(typeof t.isolate=="function"&&await Promise.resolve(t.isolate(i)),typeof t.fitViewTo=="function"&&await Promise.resolve(t.fitViewTo(i)))}catch(c){console.error("Failed to highlight IDS rule",c)}},[t]);a.useCallback(async()=>{if(!t)return;const s=new Set,n=new Set,u=new Set;for(const d of F)d.passed.forEach(S=>s.add(S)),d.failed.forEach(S=>n.add(S)),d.na.forEach(S=>u.add(S));const i=Array.from(s),c=Array.from(n),b=Array.from(u);try{if(await Promise.resolve(t.clearColors()),t.clearIsolation&&await Promise.resolve(t.clearIsolation()),typeof t.color=="function"){if(c.length>0)for(const d of w(c))d.length&&await Promise.resolve(t.color(d,{r:1,g:.2,b:.2,a:1}));if(i.length>0)for(const d of w(i))d.length&&await Promise.resolve(t.color(d,{r:.2,g:.7,b:.25,a:1}));if(b.length>0)for(const d of w(b))d.length&&await Promise.resolve(t.color(d,{r:1,g:.7,b:.2,a:1}))}console.log(`Highlighted ${i.length} passed, ${c.length} failed, ${b.length} N/A elements`)}catch(d){console.error("Failed to highlight all elements by status",d)}},[t,F]);const _e=a.useCallback(async s=>{if(!(!t||!s.globalId))try{typeof t.clearColors=="function"&&await Promise.resolve(t.clearColors()),typeof t.clearIsolation=="function"&&await Promise.resolve(t.clearIsolation()),typeof t.color=="function"&&await Promise.resolve(t.color([s.globalId],{r:1,g:.6,b:0,a:1})),typeof t.isolate=="function"&&await Promise.resolve(t.isolate([s.globalId])),typeof t.fitViewTo=="function"&&await Promise.resolve(t.fitViewTo([s.globalId]))}catch(n){console.error("Failed to focus element for IDS row",n)}},[t]),he=a.useCallback((s,n)=>{const u=H.filter(b=>b.ruleId===s.id);if(!u.length)return;const i=new Date().toISOString().replace(/[:.]/g,"-"),c=`ids-rule-${s.id}-${i}`;n==="csv"?Y(Ee(u,{includePassed:!0,includeNA:!0}),`${c}.csv`):Y(Re(u),`${c}.json`)},[H]),xe=a.useCallback(s=>{if(!p.length)return;const u=`ids-details-${new Date().toISOString().replace(/[:.]/g,"-")}`;s==="csv"?Y(Ee(p,{includePassed:!0,includeNA:!0}),`${u}.csv`):Y(Re(p),`${u}.json`)},[p]),we=a.useCallback(s=>{s.preventDefault(),s.stopPropagation();const n=R.current;if(!n)return;y.current={startX:s.clientX,startY:s.clientY,width:n.offsetWidth,height:n.offsetHeight},D.current=!0;const u=c=>{if(!D.current||!y.current)return;const b=c.clientX-y.current.startX,d=c.clientY-y.current.startY;J(S=>{const fe=Math.max(420,y.current.width+b),me=Math.max(360,y.current.height+d);return fe===S.width&&me===S.height?S:{width:Math.round(fe),height:Math.round(me)}})},i=()=>{D.current=!1,y.current=null,window.removeEventListener("pointermove",u),window.removeEventListener("pointerup",i)};window.addEventListener("pointermove",u),window.addEventListener("pointerup",i,{once:!0})},[]);return a.useEffect(()=>{if(r)return()=>{t?.clearColors?.(),t?.clearIsolation?.()}},[r,t]),r?e.jsx(Ge,{nodeRef:R,handle:".ids-panel-header",bounds:"parent",children:e.jsxs(W,{ref:R,elevation:8,sx:{position:"fixed",top:140,right:60,width:E.width,height:o?"auto":E.height,minWidth:420,minHeight:o?120:360,maxWidth:"90vw",maxHeight:"85vh",display:"flex",flexDirection:"column",boxSizing:"border-box",overflow:"hidden",zIndex:2e3},children:[e.jsxs(x,{className:"ids-panel-header",sx:{display:"flex",alignItems:"center",justifyContent:"space-between",px:2,py:1,backgroundColor:"primary.main",color:"primary.contrastText",cursor:"move"},children:[e.jsx(f,{variant:"subtitle1",children:"IDS Checker"}),e.jsxs(x,{sx:{display:"flex",alignItems:"center",gap:.5},children:[e.jsx(N,{size:"small",onClick:()=>V(s=>!s),color:"inherit",title:o?"Expand panel":"Minimize panel",children:o?e.jsx(Ue,{}):e.jsx(qe,{})}),e.jsx(N,{size:"small",onClick:Be,color:"inherit",title:"Close IDS Checker",children:e.jsx(Xe,{})})]})]}),!o&&e.jsxs(x,{sx:{flex:1,display:"flex",flexDirection:"column",p:2,gap:2,minHeight:0},children:[e.jsxs(Ye,{value:Z,onChange:(s,n)=>Q(n),sx:{minHeight:"auto",".MuiTab-root":{minHeight:"auto",textTransform:"none"}},children:[e.jsx(ge,{value:"summary",label:"Summary"}),e.jsx(ge,{value:"details",label:`Details (${p.length})`})]}),Z==="summary"&&e.jsxs(x,{sx:{display:"flex",flexDirection:"column",gap:2,overflow:"hidden",minHeight:0},children:[e.jsxs(x,{sx:{display:"flex",gap:1,flexWrap:"wrap",alignItems:"center"},children:[e.jsx(j,{title:"Load IDS definition files",slotProps:g,children:e.jsx(O,{variant:"contained",size:"small",startIcon:e.jsx(Je,{}),onClick:()=>T.current?.click(),children:"Load IDS File"})}),e.jsx(j,{title:"Insert a sample IDS specification",slotProps:g,children:e.jsx(O,{variant:"outlined",size:"small",onClick:We,children:"Paste Sample"})}),e.jsx(j,{title:"Clear loaded IDS files and results",slotProps:g,children:e.jsx(O,{variant:"outlined",size:"small",color:"inherit",startIcon:e.jsx(Ke,{}),onClick:Oe,children:"Clear"})}),e.jsx("input",{ref:T,type:"file",accept:".xml,.ids",multiple:!0,style:{display:"none"},onChange:Me}),e.jsx(x,{sx:{flex:1}}),e.jsx(te,{component:"fieldset",size:"small",children:e.jsxs(Ze,{row:!0,value:ke?"selected":"all",onChange:$e,children:[e.jsx(je,{value:"all",control:e.jsx(Ie,{size:"small"}),label:"All Elements"}),e.jsx(je,{value:"selected",control:e.jsx(Ie,{size:"small"}),label:"Selected Only"})]})}),e.jsx(j,{title:"Validate the loaded model against IDS requirements",slotProps:g,children:e.jsx("span",{children:e.jsx(O,{variant:"contained",size:"small",startIcon:G?e.jsx(Qe,{size:16,color:"inherit"}):e.jsx(es,{}),disabled:!Ve||!t||!L||G,onClick:Ae,children:G?"Checking…":"Run Check"})})})]}),ze&&e.jsxs(W,{variant:"outlined",sx:{p:1.5,display:"flex",flexDirection:"column",gap:1},children:[e.jsxs(x,{sx:{display:"flex",alignItems:"center",justifyContent:"space-between",gap:1,flexWrap:"wrap"},children:[e.jsx(v,{size:"small",label:Fe,color:Ne}),P&&e.jsx(f,{variant:"caption",color:"text.secondary",children:P})]}),e.jsx(ss,{...Te,sx:{height:6,borderRadius:9999}})]}),ne.length>0&&e.jsxs(W,{variant:"outlined",sx:{p:1},children:[e.jsx(f,{variant:"caption",color:"text.secondary",children:"Loaded IDS files"}),e.jsx(ye,{dense:!0,children:ne.map(s=>e.jsxs(be,{disablePadding:!0,children:[e.jsx(ts,{sx:{minWidth:28},children:e.jsx(pe,{fontSize:"small"})}),e.jsx(Se,{primaryTypographyProps:{variant:"body2"},primary:s})]},s))})]}),ie&&e.jsx(ls,{severity:"error",variant:"outlined",children:ie}),e.jsxs(x,{sx:{display:"flex",gap:1},children:[e.jsx(v,{label:`Passed ${se.pass}`,color:"success",variant:"outlined"}),e.jsx(v,{label:`Failed ${se.fail}`,color:"error",variant:"outlined"}),e.jsx(v,{label:`N/A ${se.na}`,color:"warning",variant:"outlined"})]}),e.jsx(W,{variant:"outlined",sx:{flex:1,overflow:"auto"},children:F.length===0?e.jsx(x,{sx:{p:2},children:e.jsx(f,{variant:"body2",color:"text.secondary",children:"Load one or more IDS XML files and run the check to see rule results."})}):e.jsx(ye,{dense:!0,disablePadding:!0,children:F.map(s=>e.jsxs(as.Fragment,{children:[e.jsx(be,{secondaryAction:e.jsxs(x,{sx:{display:"flex",gap:1},children:[e.jsx(j,{title:"Highlight in viewer",slotProps:g,children:e.jsx("span",{children:e.jsx(N,{size:"small",onClick:()=>He(s),children:e.jsx(ns,{fontSize:"small"})})})}),e.jsx(j,{title:"Export rule CSV",slotProps:g,children:e.jsx("span",{children:e.jsx(N,{size:"small",onClick:()=>he(s,"csv"),children:e.jsx(Ce,{fontSize:"small"})})})}),e.jsx(j,{title:"Export rule JSON",slotProps:g,children:e.jsx("span",{children:e.jsx(N,{size:"small",onClick:()=>he(s,"json"),children:e.jsx(Pe,{fontSize:"small"})})})})]}),children:e.jsx(Se,{primary:e.jsxs(x,{sx:{display:"flex",flexWrap:"wrap",gap:1,alignItems:"center"},children:[e.jsx(f,{variant:"subtitle2",children:s.title}),e.jsx(v,{size:"small",label:`Pass ${s.passed.length}`,color:"success"}),e.jsx(v,{size:"small",label:`Fail ${s.failed.length}`,color:"error"}),e.jsx(v,{size:"small",label:`N/A ${s.na.length}`,color:"warning"})]}),secondary:e.jsxs(f,{variant:"caption",color:"text.secondary",children:["Rule ID: ",s.id]})})}),e.jsx(is,{component:"li"})]},s.id))})})]}),Z==="details"&&e.jsxs(x,{sx:{display:"flex",flexDirection:"column",gap:1.5,flex:1,minHeight:0},children:[e.jsxs(x,{sx:{display:"flex",gap:1,flexWrap:"wrap"},children:[e.jsx(rs,{size:"small",value:ee,onChange:s=>re(s.target.value),placeholder:"Search details…",InputProps:{startAdornment:e.jsx(os,{position:"start",children:e.jsx(cs,{fontSize:"small"})})},sx:{flex:1,minWidth:160}}),e.jsxs(te,{size:"small",sx:{minWidth:120},children:[e.jsx(ve,{children:"Status"}),e.jsxs(Le,{value:U,label:"Status",onChange:s=>oe(s.target.value),MenuProps:{sx:{zIndex:4e3}},children:[e.jsx($,{value:"ALL",children:"All"}),e.jsx($,{value:"FAILED",children:"Failed"}),e.jsx($,{value:"PASSED",children:"Passed"}),e.jsx($,{value:"NA",children:"N/A"})]})]}),e.jsxs(te,{size:"small",sx:{minWidth:160},children:[e.jsx(ve,{children:"Rule"}),e.jsxs(Le,{value:q,label:"Rule",onChange:s=>ce(s.target.value),MenuProps:{sx:{zIndex:4e3}},children:[e.jsx($,{value:"ALL",children:"All rules"}),F.map(s=>e.jsx($,{value:s.id,children:s.title},s.id))]})]}),e.jsx(j,{title:"Reset filters",slotProps:g,children:e.jsx("span",{children:e.jsx(N,{size:"small",onClick:()=>{ce("ALL"),oe("ALL"),re("")},children:e.jsx(ds,{fontSize:"small"})})})}),e.jsx(x,{sx:{flex:1}}),e.jsx(j,{title:"Download the filtered results as CSV",slotProps:g,children:e.jsx("span",{children:e.jsx(O,{variant:"outlined",size:"small",startIcon:e.jsx(Ce,{}),onClick:()=>xe("csv"),disabled:!p.length,children:"Export CSV"})})}),e.jsx(j,{title:"Download the filtered results as JSON",slotProps:g,children:e.jsx("span",{children:e.jsx(O,{variant:"outlined",size:"small",startIcon:e.jsx(Pe,{}),onClick:()=>xe("json"),disabled:!p.length,children:"Export JSON"})})})]}),e.jsxs(x,{sx:{display:"flex",alignItems:"center",gap:1},children:[e.jsx(us,{fontSize:"small",color:"action"}),e.jsxs(f,{variant:"body2",color:"text.secondary",children:["Showing ",p.length," of ",H.length," rows"]})]}),p.length===0?e.jsx(W,{variant:"outlined",sx:{p:2},children:e.jsx(f,{variant:"body2",color:"text.secondary",children:"Adjust the filters or run the IDS check to populate detailed results."})}):e.jsx(Is,{rows:p,onRowClick:_e,height:Math.max(220,E.height-280)})]})]}),!o&&e.jsx(x,{onPointerDown:we,sx:{position:"absolute",bottom:6,right:6,width:16,height:16,cursor:"nwse-resize",borderRight:"2px solid",borderBottom:"2px solid",borderColor:"divider",opacity:.6,"&:hover":{opacity:1}}})]})}):e.jsx(W,{elevation:6,sx:{position:"fixed",bottom:20,right:160,zIndex:1900},children:e.jsx(N,{onClick:m,title:"Open IDS Checker",children:e.jsx(pe,{})})})};export{Ps as default};
